syntax = "proto3";

package gateway;

option go_package = "services/gateway/proto;proto";

import "google/protobuf/descriptor.proto";

service Gateway {
  rpc SendMessageToUse(SendMessageToUserRequest) returns (SendMessageToUserResponse) {}
  rpc ProxyServer(ProxyServerRequest) returns (ProxyServerResponse) {}

  rpc Login(LoginRequest) returns (LoginResponse) {}
  rpc Echo(EchoRequest) returns (EchoResponse) {}
}

message SendMessageToUserRequest {
  uint64 uid = 1;
  string message = 2;
}

message SendMessageToUserResponse {}

message ProxyServerRequest {
  string nodeid = 1;
  string server_name = 2;
  string version = 3;
  google.protobuf.FileDescriptorSet files = 4;

}

message ProxyServerResponse {}


message CaptchaQuestion {
  string captch_id = 1;
  string captch_type = 2;
  bytes catpch_raw = 3;
}

message CaptchaAnswer {
  string captch_id = 1;
  string captch_type = 2;
  string answer = 3;
}

message AccountInfo {
  string account = 1;
  string passwd = 2;
  CaptchaAnswer answer = 3;
}

message SessionInfo {
  string account = 1;
  string session = 2;
}

message LoginRequest {
  oneof checker {
    AccountInfo account_info = 1;
    SessionInfo session_info = 2;
  }
}

message LoginResponse {
  enum Flag {
    Success = 0;
    UnknowError = 1;
  }
  Flag flag = 1;
  string session = 2; // if flag == Success
}

message EchoRequest {
  bytes data = 1;
}

message EchoResponse {
  bytes data = 1;
}
